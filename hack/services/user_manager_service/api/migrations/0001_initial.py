# Generated by Django 5.1.3 on 2024-12-01 12:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExtDatamodule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('EDIT_TASK', 'Edit Task'), ('MANAGE_DATA', 'Manage Data'), ('CREATE_EXT_DATAMODULE', 'Create Ext Datamodule'), ('PROCESS_ETL_TASK', 'Process ETL Task')], max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roles', models.ManyToManyField(related_name='users', to='api.role')),
            ],
        ),
        migrations.CreateModel(
            name='ExtDatamoduleAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('READ', 'Read'), ('WRITE', 'Write'), ('OWNER', 'Owner')], max_length=10)),
                ('ext_datamodule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.extdatamodule')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ext_datamodule_accesses', to='api.user')),
            ],
        ),
        migrations.AddField(
            model_name='extdatamodule',
            name='owners',
            field=models.ManyToManyField(related_name='owned_datamodules', to='api.user'),
        ),
    ]
